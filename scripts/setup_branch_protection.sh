#!/bin/bash

# Script para configurar la protecci√≥n de la rama main
# Requiere GitHub CLI (gh) instalado y autenticado

set -e

# Colores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${GREEN}üõ°Ô∏è  Configurando protecci√≥n de rama main...${NC}"

# Verificar que GitHub CLI est√° instalado
if ! command -v gh &> /dev/null; then
    echo -e "${RED}‚ùå GitHub CLI no est√° instalado${NC}"
    echo "Instala GitHub CLI desde: https://cli.github.com/"
    exit 1
fi

# Verificar autenticaci√≥n
if ! gh auth status &> /dev/null; then
    echo -e "${RED}‚ùå No est√°s autenticado en GitHub CLI${NC}"
    echo "Ejecuta: gh auth login"
    exit 1
fi

# Obtener informaci√≥n del repositorio
REPO=$(gh repo view --json nameWithOwner -q .nameWithOwner)
echo -e "${YELLOW}üì¶ Repositorio: ${REPO}${NC}"

# Configurar protecci√≥n de rama main
echo -e "${GREEN}üîí Configurando reglas de protecci√≥n...${NC}"

# Configurar protecci√≥n b√°sica
gh api repos/${REPO}/branches/main/protection \
  --method PUT \
  --field required_status_checks='{"strict":true,"contexts":["Code Quality and Tests","PR Policy Validation"]}' \
  --field enforce_admins=true \
  --field required_pull_request_reviews='{"required_approving_review_count":1,"dismiss_stale_reviews":true,"require_code_owner_reviews":false,"require_last_push_approval":false}' \
  --field restrictions=null \
  --field allow_force_pushes=false \
  --field allow_deletions=false \
  --field block_creations=false \
  --field required_conversation_resolution=true

echo -e "${GREEN}‚úÖ Protecci√≥n de rama configurada exitosamente${NC}"

# Mostrar configuraci√≥n actual
echo -e "\n${YELLOW}üìã Configuraci√≥n actual:${NC}"
echo "‚Ä¢ ‚úÖ Revisiones de PR requeridas (m√≠nimo 1)"
echo "‚Ä¢ ‚úÖ Status checks requeridos (CI + Pol√≠ticas de PR)"
echo "‚Ä¢ ‚úÖ Conversaciones deben resolverse"
echo "‚Ä¢ ‚úÖ Push forzado bloqueado"
echo "‚Ä¢ ‚úÖ Eliminaci√≥n de rama bloqueada"
echo "‚Ä¢ ‚úÖ Reglas aplicadas a administradores"

echo -e "\n${GREEN}üéâ ¬°Configuraci√≥n completada!${NC}"
echo -e "${YELLOW}üìù Ahora todos los PRs a main requerir√°n:${NC}"
echo "  1. T√≠tulo con formato conventional commits"
echo "  2. Descripci√≥n de al menos 10 caracteres"
echo "  3. Nombre de rama con prefijo v√°lido"
echo "  4. No ser un draft PR"
echo "  5. Al menos 1 revisi√≥n aprobada de otro contribuidor"
echo "  6. Pasar todos los tests y an√°lisis de c√≥digo"
echo "  7. Mantener cobertura ‚â• 80%"
echo "  8. Resolver todas las conversaciones"

# Informaci√≥n adicional
echo -e "\n${YELLOW}üí° Consejos adicionales:${NC}"
echo "‚Ä¢ Crea PRs desde ramas de feature"
echo "‚Ä¢ Ejecuta 'scripts/setup_dev.sh' antes de desarrollar"
echo "‚Ä¢ Usa 'flutter test' para verificar tests localmente"
echo "‚Ä¢ Usa 'flutter analyze' para verificar c√≥digo localmente"
