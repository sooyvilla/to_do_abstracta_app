// Mocks generated by Mockito 5.4.5 from annotations
// in to_do_abstracta_app/test/domain/usecases/llm_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:to_do_abstracta_app/domain/models/task_form_data.dart' as _i2;
import 'package:to_do_abstracta_app/domain/repositories/llm_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTaskFormData_0 extends _i1.SmartFake implements _i2.TaskFormData {
  _FakeTaskFormData_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LLMRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLLMRepository extends _i1.Mock implements _i3.LLMRepository {
  MockLLMRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isConfigured => (super.noSuchMethod(
        Invocation.getter(#isConfigured),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<String> generateTaskDescription(String? prompt) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateTaskDescription,
          [prompt],
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #generateTaskDescription,
            [prompt],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<List<String>> generateTaskTags(
    String? title,
    String? description,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateTaskTags,
          [
            title,
            description,
          ],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<_i2.TaskFormData> generateCompleteTaskFromTitle(String? title) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateCompleteTaskFromTitle,
          [title],
        ),
        returnValue: _i4.Future<_i2.TaskFormData>.value(_FakeTaskFormData_0(
          this,
          Invocation.method(
            #generateCompleteTaskFromTitle,
            [title],
          ),
        )),
      ) as _i4.Future<_i2.TaskFormData>);
}
